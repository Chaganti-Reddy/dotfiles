#!/usr/bin/env bash
#
# Script name: dm-currencies
# Description: Convert prices between currencies using https://rate.sx
# Dependencies: dmenu and curl

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

cp2cb() {
  case "$XDG_SESSION_TYPE" in
    # 'x11') xclip -r -selection clipboard;;
    'x11') echo $1 | xclip;;
    'wayland') wl-copy -n;; 
    *) err "Unknown display server";; 
  esac
}

DMENU="dmenu -i -l 15 -p"

# Chose how you want to display the currencies (default: "names")
# currency_names="codes"

# "auto" will get currencies dynamically, "manual" will only use the currencies you define (default: "auto")
# defined currencies will still be included when set to auto
# currency_method="manual"

declare -A currencies
# currencies[Dollar]="USD"
# currencies[Pound]="GBP"
# currencies[Monero]="XMR"
# see: https://rate.sx/:currencies and https://rate.sx/:coins


main() {
  # If $currency_method is not set to manual, get currencies dynamically
  if [[ "${currency_method:-auto}" != "manual" ]]; then
    mapfile -t data < <(curl -Ss rate.sx/:currencies)
    data+=("USD United States dollar")
    for ((i=0; i < ${#data[@]}; ++i)); do
      currencies[$(echo "${data[$i]}" | awk '{print substr($0, index($0, $2))}')]="$(echo "${data[$i]}" | cut -d' ' -f1)"
      done
    unset data
  fi

  # If $currency_names is not codes use currency names, else use currency codes
  if [[ "${currency_names:-names}" != "codes" ]]; then
    from_name=$(printf '%s\n' "${!currencies[@]}" | sort | ${DMENU} 'Convert from:') "$@" || exit 1
    to_name=$(printf '%s\n' "${!currencies[@]}" | sort | ${DMENU} 'Convert to:') "$@" || exit 1
    from_code=${currencies[$from_name]}
    to_code=${currencies[$to_name]}
  else
    from_name=$(printf '%s\n' "${currencies[@]}" | sort | ${DMENU} 'Convert from:') "$@" || exit 1
    to_name=$(printf '%s\n' "${currencies[@]}" | sort | ${DMENU} 'Convert to:') "$@" || exit 1
    from_code=${from_name}
    to_code=${to_name}
  fi

  # Get amount and convert it
  amount=$(echo "" | ${DMENU} "Amount (${from_code} -> ${to_code}):")
  converted=$(curl -Ss "https://${to_code}.rate.sx/${amount}${from_code}")

  # Copy amount to clipboard and send notification
  # echo "$converted" | cp2cb "$converted"
  echo "$converted" | xclip
  dunstify "Converted amount (in clipboard)" "$converted $to_code"
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
