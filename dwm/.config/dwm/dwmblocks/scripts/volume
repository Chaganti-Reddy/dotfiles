#!/bin/sh


# Handle click events
case $BUTTON in
	2) setsid -w -f pavucontrol; pkill -RTMIN+10 "${STATUSBAR:-dwmblocks}" ;;
	1) wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle ;;
	3) notify-send "ÔÄ® Volume Module" "Ô©Ω Volume and Ô°´ Mic:
- Middle: pavucontrol
- Click: mute/unmute
- Scroll: change volume
- Right: help
- Ctrl+click: edit script" ;;
	4) wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+;;
	5) wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%-;;
	6) wpctl set-volume @DEFAULT_AUDIO_SOURCE@ 1%+;;
	7) wpctl set-volume @DEFAULT_AUDIO_SOURCE@ 1%-;;
	8) setsid -f "st" -e "nvim" "$0" ;;
  9) wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle ;;
esac

# Get sink (output) volume and mute status
sink_raw=$(wpctl get-volume @DEFAULT_AUDIO_SINK@)
sink_muted=0
echo "$sink_raw" | grep -q '\[MUTED\]' && sink_muted=1
sink_vol=$(echo "$sink_raw" | awk '{print $2}')
sink_vol=$(printf "%.0f" "$(echo "$sink_vol * 100" | bc -l)")

# Get mic (input) volume and mute status
mic_raw=$(wpctl get-volume @DEFAULT_AUDIO_SOURCE@)
mic_muted=0
echo "$mic_raw" | grep -q '\[MUTED\]' && mic_muted=1
mic_vol=$(echo "$mic_raw" | awk '{print $2}')
mic_vol=$(printf "%.0f" "$(echo "$mic_vol * 100" | bc -l)")

# Volume icon
if [ "$sink_muted" -eq 1 ] || [ "$sink_vol" -eq 0 ]; then
	vol_icon="üîá "
elif [ "$sink_vol" -le 20 ]; then
  vol_icon="ÔÄß "  # Very low volume
elif [ "$sink_vol" -le 40 ]; then
	vol_icon="Û∞ïæ  "
elif [ "$sink_vol" -le 60 ]; then
	vol_icon="ÔÄ®  "
elif [ "$sink_vol" -le 80 ]; then
	vol_icon="üîä "
else
	vol_icon="Û∞ùù "
fi

# Mic icon
if [ "$mic_muted" -eq 1 ] || [ "$mic_vol" -eq 0 ]; then
	mic_icon="Ô°¨ "
elif [ "$mic_vol" -le 20 ]; then
  mic_icon="Û∞¢≥  "  
elif [ "$mic_vol" -le 40 ]; then
  mic_icon="Ó∞í "
elif [ "$mic_vol" -le 60 ]; then
  mic_icon="Û∞¢¥ "
elif [ "$mic_vol" -le 80 ]; then
  mic_icon="ÔÑ∞ "
else
	mic_icon="Ó¥É "
fi

# Final output
echo "$vol_icon$sink_vol% $mic_icon$mic_vol%"

